openapi: 3.0.1
info:
  title: replicate
  description: Generate images and videos with replicate.com
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/replicate
    maintainer: "[direktiv.io](https://www.direktiv.io) "
    issues: https://github.com/direktiv-apps/replicate/issues
    url: https://github.com/direktiv-apps/replicate
    categories:
    - misc
    license: "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)"
    long-description: "This function can call the [replicate.com](https://replicate.com)\
      \ API to generate images and videos with AI. "
servers:
- url: /
paths:
  /:
    post:
      parameters:
      - name: Direktiv-ActionID
        in: header
        description: "direktiv action id is an UUID. \nFor development it can be set\
          \ to 'development'\n"
        schema:
          type: string
          default: development
      - name: Direktiv-TempDir
        in: header
        description: |
          direktiv temp dir is the working directory for that request
          For development it can be set to e.g. '/tmp'
        schema:
          type: string
          default: /tmp
      requestBody:
        content:
          application/json:
            schema:
              required:
              - api-key
              - model
              - version
              type: object
              properties:
                debug:
                  type: boolean
                  description: Print debug output
                api-key:
                  type: string
                  description: API key provided by replicate.com
                model:
                  type: string
                  description: Model for generation
                  example: stability-ai/stable-diffusion
                version:
                  type: string
                  description: Model version
                input:
                  type: object
                  additionalProperties:
                    type: object
                files:
                  type: array
                  items:
                    required:
                    - file
                    - mime
                    - name
                    type: object
                    properties:
                      name:
                        type: string
                        description: Name of the parameter in replicate.com API for
                          the model
                      mime:
                        type: string
                        description: Mimetype of the file
                        example: image/png
                      file:
                        type: string
                        description: Path to the file provided by Direktiv
        required: false
      responses:
        "200":
          description: List of executed commands.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
            replicate:
              example:
                completed_at: null
                created_at: 2023-02-10T09:28:22.977673Z
                error: null
                id: qzk7dr2zjjasdsdsadada2ja4mmea
                input:
                  num_outputs: 1
                  prompt: a golden horse
                logs: ""
                metrics: {}
                output: null
                started_at: null
                status: starting
                urls:
                  cancel: https://api.replicate.com/v1/predictions/qzk7dr2zjjasdsdsadada2ja4mmea/cancel
                  get: https://api.replicate.com/v1/predictions/qzk7dr2zjjasdsdsadada2ja4mmea
                version: 3554d9e699e09693d3fa334a79c58be9a405dd021d3e11281256d53185868912
                webhook_completed: null
        default:
          description: generic error response
          headers:
            Direktiv-ErrorMessage:
              schema:
                type: string
            Direktiv-ErrorCode:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      x-direktiv-function: |-
        functions:
        - id: replicate
          image: gcr.io/direktiv/functions/replicate:1.0
          type: knative-workflow
      x-direktiv-examples:
      - title: Basic
        content: "- id: replicate\n  type: action\n  action:\n    function: replicate\n\
          \    secrets: [\"replicate\"]\n    input:\n      debug: true \n      model:\
          \ stability-ai/stable-diffusion\n      version: f178fa7a1ae43a9a9af01b833b9d2ecf97b1bcb0acfd2dc5dd04895e042863f1\n\
          \      api-key: jq(.secrets.replicate)\n      input:\n        prompt: an\
          \ green elephant jumping of a bridge with a parachute "
      - title: Advanced
        content: "- id: replicate\n  type: action\n  action:\n    function: replicate\n\
          \    input: \n      secrets: [\"replicate\"]\n      model: lambdal/text-to-pokemon\n\
          \      version: 3554d9e699e09693d3fa334a79c58be9a405dd021d3e11281256d53185868912\n\
          \      input:\n        one: two\n        three: four\n        six: 6\n \
          \     files:\n      - name: test\n        mime: image/png\n        file:\
          \ \"/tests/in.png\"\n  catch:\n  - error: \"*\""
      x-direktiv-secrets:
      - name: apikey
        description: Replicate.com API key
      x-direktiv:
        cmds:
        - action: http
          debug: "{{ .Debug }}"
          url: https://api.replicate.com/v1/predictions
          method: POST
          headers:
          - Content-Type: application/json
          - Authorization: "Token {{ .Body.APIKey }}"
          data:
            kind: string
            value: "{ \n  \"model\": \"{{ .Model }}\",\n  \"version\":  \"{{ .Version\
              \ }}\",\n  \"input\": {\n    {{- $first := true}}\n    {{- range $k,\
              \ $v := .Input }}\n      {{- if $first}}\n        {{- $first = false}}\n\
              \      {{- else}},{{- end}}\n      \"{{ $k }}\" : {{ $v | toJson }}\
              \  \n    {{- end}}\n    {{ $length := len .Files }} {{ if gt $length\
              \ 0 }}\n    {{range $i, $a := .Files }}\n      ,\n      \"{{ ($a).Name\
              \  }}\":  \"data:{{ ($a).Mime }};base64,{{ ($a).File | file64 }}\"\n\
              \    {{ end }}\n    {{ end }}\n  }\n}\n"
        output: |
          {
            "replicate": {{ index (index . 0) "result" | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      x-codegen-request-body-name: body
components:
  schemas:
    direktivFile:
      type: object
      x-go-type:
        type: DirektivFile
        import:
          package: github.com/direktiv/apps/go/pkg/apps
    error:
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
x-original-swagger-version: "2.0"

